/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EIP712, EIP712Interface } from "../EIP712";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x61012060405234801561001157600080fd5b506040516103cc3803806103cc83398181016040528101906100339190610162565b6000828051906020012090506000828051906020012090503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250504660a081815250508160c081815250508060e081815250507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f828246306040516020016100d39594939291906101fb565b60405160208183030381529060405280519060200120610100818152505050505050610357565b600061010d6101088461027f565b61024e565b90508281526020810184848401111561012557600080fd5b6101308482856102f5565b509392505050565b600082601f83011261014957600080fd5b81516101598482602086016100fa565b91505092915050565b6000806040838503121561017557600080fd5b600083015167ffffffffffffffff81111561018f57600080fd5b61019b85828601610138565b925050602083015167ffffffffffffffff8111156101b857600080fd5b6101c485828601610138565b9150509250929050565b6101d7816102af565b82525050565b6101e6816102c1565b82525050565b6101f5816102eb565b82525050565b600060a08201905061021060008301886101dd565b61021d60208301876101dd565b61022a60408301866101dd565b61023760608301856101ec565b61024460808301846101ce565b9695505050505050565b6000604051905081810181811067ffffffffffffffff8211171561027557610274610328565b5b8060405250919050565b600067ffffffffffffffff82111561029a57610299610328565b5b601f19601f8301169050602081019050919050565b60006102ba826102cb565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156103135780820151818401526020810190506102f8565b83811115610322576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60805160601c60a05160c05160e05161010051603f61038d6000396000505060005050600050506000505060005050603f6000f3fe6080604052600080fdfea2646970667358221220029c382a523a288dc1120f61dedbd97f76896d940c470cf1bc120d86bf1b267864736f6c63430008000033";

type EIP712ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712__factory extends ContractFactory {
  constructor(...args: EIP712ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EIP712> {
    return super.deploy(name, version, overrides || {}) as Promise<EIP712>;
  }
  getDeployTransaction(
    name: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  attach(address: string): EIP712 {
    return super.attach(address) as EIP712;
  }
  connect(signer: Signer): EIP712__factory {
    return super.connect(signer) as EIP712__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712Interface {
    return new utils.Interface(_abi) as EIP712Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EIP712 {
    return new Contract(address, _abi, signerOrProvider) as EIP712;
  }
}
